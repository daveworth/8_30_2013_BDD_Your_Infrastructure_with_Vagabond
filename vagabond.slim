head
  title="BDDing your Infrastructure"
  meta name="description" content="using Vagabond to test Vagrant"
  meta name="author"      content="David Worth - dave@bignerdranch.com"
  meta name="viewport"    content="width=1024, user-scalable=no"

  script src="js/jquery-1.7.2.min.js"
  script src="js/modernizr.custom.js"

  link rel="stylesheet" href="core/deck.core.css"
  link rel="stylesheet" href="css/vagabond.css"
  script src="core/deck.core.js"

  link rel="stylesheet" href="extensions/goto/deck.goto.css"
  script src="extensions/goto/deck.goto.js"

  link rel="stylesheet" href="extensions/hash/deck.hash.css"
  script src="extensions/hash/deck.hash.js"

  /link rel="stylesheet" href="extensions/menu/deck.menu.css"
  /script src="extensions/menu/deck.menu.js"

  link rel="stylesheet" href="extensions/navigation/deck.navigation.css"
  script src="extensions/navigation/deck.navigation.js"

  /link rel="stylesheet" href="extensions/scale/deck.scale.css"
  /script src="extensions/scale/deck.scale.js"

  link rel="stylesheet" href="extensions/status/deck.status.css"
  script src="extensions/status/deck.status.js"

  /link rel="stylesheet" href="themes/style/web-2.0.css"
  /link rel="stylesheet" href="themes/style/swiss.css"
  link rel="stylesheet" href="themes/style/neon.css"

  /link rel="stylesheet" href="themes/transition/horizontal-slide.css"
  /link rel="stylesheet" href="themes/transition/vertical-slide.css"

  javascript:
    $(function() { $.deck('.slide'); });

body
  // use .deck-menu if you've enabled the menu extension above
  /article.deck-container.deck-menu
  article.deck-container
    section.slide
      // Permalinks are available if you've enabled the hash exntension
      /a.deck-permalink href="." title="Permalink to this slide" #
      center
        h2 BDDing your Infrastructure with Vagabond
        br
        h3 Or how I learned to stop worrying and Love the virtualization
        br
        h4 David Worth - dave@bignerdranch.com
        img.round src="http://www.bignerdranch.com/images/bnr-twitter-logo.png"

    section.slide
      h2 Background
      section.slide
        h3 In a previously life... I was a Cowboy Sysadmin
      section.slide
        p We had loads of Xen VMs all managed by hand.
      section.slide
        p I was pretty good with the duct tape + SVN in order to keep things running
      section.slide
        p Found out about Puppet from @ckdake but it's hard and the team was very resistant.

    section.slide
      h2 Not-So-Secret Agenda
      section.slide
        h3 I also like beer.
      section.slide
        h4 ... and was asked to do a tech-talk on Belgian Beer
      section.slide
        h5 ... but I have to drive.

    section.slide
      h2 Better Background
      section.slide
        h3 Came to Highgroove and joined a crazy big analytics problem with a ton of AWS Infrastructure.
      section.slide
        p Lots of Chef and I was bad with it.
      section.slide
        p Even when I got better with it spinning up new hosts would not always work out of the box... 
      section.slide
        p And never on a Saturday when I was alone...
      section.slide
        p "Testing" all of our recipes was
        ol
          li vague as to how ...
          li not an option.
      section.slide
        p and it made me worse/risk averse!

    section.slide
      h2 Saison
      h3 Delicious summer beer.
      section.slide
        img src="images/saison_dupont.jpg"
        h3 Saison Dupont
        h4 The gold standard in Saisons

    section.slide
      h2 What do you mean by BDD?
      section.slide
       h3 Probably not what you do...
      section.slide
        p I care that not only are my chef or puppet configurations "correct" but that they actually do the right thing...

    section.slide
      h2 So what is "the right thing" in this case?
      h3 After using a "devOps" platform (Chef, Puppet, etc.) on some servers we would want...
      section.slide
        ul
          li Packages are installed
          li The correct <strong>version</strong> of packages are installed.
          li Other packages that should be uninstalled actually <strong>are</strong> uninstalled...
          li Services that should be reachable are actually reachable...
          li Those services are actually running the correct versions!
          li Deployed applications are actually working!

    section.slide
      h2 Trappist Beers
      h3 Comparing them is hard because they vary so much.
      section.slide
        h3 So my favorite is Westmalle Tripel
        img src="images/westmalletripel.png"

    section.slide
      h2 The competition - a literature survey.
      section.slide
        h3 I'm not the only one to have felt this pain clearly.
      section.slide
        p Last year at ArrrrCamp Bernard Grymonpon gave a great talk on <a href="http://vimeo.com/51911896">Testing Chef Recipes</a> - <a href="https://speakerdeck.com/wonko/arrrrcamp-testing-chef">Slidedeck</a>
      section.slide
        p <a href="http://acrmp.github.io/foodcritic/"">Foodcritic</a> - a Linter which seems pretty cool but isn't a tester..  more of a style-guide.  Seems like a Good Thing.
      section.slide
        p <a href="https://github.com/calavera/rspec-chef">Rspec-chef</a> - Doesn't appear super feature complete and last commit Jan 11, 2012
      section.slide
        p <a href="http://acrmp.github.io/chefspec/">chefspec</a> - "ChefSpec runs your cookbook but without actually converging the node that your examples are being executed on." Also seems cool but doesn't meet my needs!
        section.slide
          ' To quote Bernard's talk "feels like testing chef, not the recipe"
      section.slide
        p <a href="https://github.com/calavera/minitest-chef-handler">minitest-chef-handler</a> seems a lot like what I was shooting for!

    section.slide
      h2 Abbaye Ale - has nothing to do with the church really
      h3 Everyone knows Leffe (and it's GREAT) but have you tried...
      section.slide
        h3 Grimbergen Blonde
        img src="images/grimbergen-blonde.jpg"

    section.slide
      h2 Vagabond
      section.slide
        h3 As usual, anything I do well someone else actually wrote and I enhance a tiny amount.
      section.slide
        h2 Profit!
      section.slide
        p Originally written by <a href="https://twitter.com/wfarr">@wfarr</a> during his RailsMachine tenure.  He even <a href="https://speakerdeck.com/wfarr/valiantly-validating-vagrant-with-vagabond">talked</a> about it once.
      section.slide
        p It's a framework for creating new virtual machines with <a href="http://vagrantup.com">Vagrant</a> and testing them!

    section.slide
      h2 Vagabond (con't)
      ul
        li When I had this idea I bounced it off @alindeman and @vanstee and the latter told me about Vagabond.
        li When I found it there was a pretty extensive TODO list, and it totally didn't do what I really wanted
        li I struggled to get it working... and I struggled to understand how it worked but it was something!
        li and finally I had an ah-ha moment - specs run from the home directory of the guest!

    section.slide
      h2 Flemish Red
      h3 Sour and delicious.  Drink them all.
      section.slide
        h4 In particular Rodenbach Grand Cru
        img src="images/rodenbach-grand-cru.jpg"
        h4 but.. if you can find it on draught try Duchesse de Bourgogne

    section.slide
      h2 Vagabond (con't) - the additions
      section.slide
        h3 So... what did you do about it?
      section.slide
        p I checked off some of the TODO list (there are some hard problems in there! Particularly hard to do in a general way!)

    section.slide
      h2 Vagabond (con't) - File contents
      section.slide
        p Given a file the following is harder than it seems:
        pre
          ' it { should contain "some content" }</code>
      section.slide
        p If you just want a string on a single line it's not so bad but could be super slow for big files.
      section.slide
        p You could implement Boyer-Moore...
      section.slide
        p
          ' (how has that not been added to StdLib if the Sieve of Eratosthenes has been?)
      section.slide
        p What about regexps?  What about multiline regexps?  On HUGE files?
      section.slide
        p Hard to do "right" (hard to define "right"!)  Not so terrible if you are willing to do something and fail...

    section.slide
      h2 Tripel
      h3 Super delicious strong beer...
      img src="images/tripel_karmeliet.jpg"
      h3 Tripel Karmeliet
      section.slide
        h4 do not drink 7 of these in a night.
      section.slide
        h4 in NYC.
      section.slide
        h4 after warning your whole party how dangerous it is.
      section.slide
        h4 seriously.

    section.slide
      h2 Remote Matchers e.g. "real" BDD
      section.slide
        p a <code>portscan</code> module to scan ports and services (via <a href="https://github.com/sophsec/ruby-nmap">ruby-nmap</a>) in order to determine what's actually running.
        ul
          section.slide
            li <code>it { should have_open_port 22 }</code>
          section.slide
            li <code>it { should only_have_open_ports [22, 443] }</code>
          section.slide
            li <code>it { should have_open_port "ssh" }</code>
          section.slide
            li <code>it { should have_remote_service "OpenSSH", on_port: 22 }</code>
          section.slide
            li <code>it { should have_remote_service_version "OpenSSH", "5.3p1" }</code>

    section.slide
      h2 Belgian White
      h3 so it's hot but you don't want a Hefeweizen?  Perfect!
      section.slide
        img src="images/blanche_de_chambly.png"
        h3 Blanche de Chambly
        h4
          '(not technically Belgian.. Canadian but Belgian-style)

    section.slide
      h2 Remote Matcher (con't)
      section.slide
        h3 a "webapp" module
      section.slide
        ul
          li Actually wraps up a capybara-webkit instance
          li Write capybara specs and run them against a service that is deployed in the Vagrant instance!
      section.slide
        pre
          | describe "Testing Apache's default landing page", :remote => :true do
            let(:default_landing_page_copy) { "It works!" }
              describe webapp(default_url) do
                it "should have a landing page" do
                  visit "/"
                  page.should have_content default_landing_page_copy
                end
              end
            end
      section.slide
        ' demo

    section.slide
      h2 KWAK!
      img src="images/kwak.jpg"
      section.slide
        h3 have you seen the glass?!?!  It's also delicious.
      section.slide
        h4 From the same brouwerij as Tripel Karmeleit

    section.slide
      h2 Upgrade paths
      section.slide
        h3 So your infrastructure is on <code>v1</code> of your cookbooks, and you want to upgrade to <code>v2</code> and know that it works...
      section.slide
        h4 We can do that with git tags (though it's kinda Hacky/PoC right now)
      section.slide
        ' demo

    section.slide
      h2 Westvleteren
      h3 Can't buy it in the states except in their special "builder pack".  Go to the monastary to try it!
      img src="images/westvleteren.jpg"

    section.slide
      h2 What needs to be done and can't be now?
      section.slide
        pre
          | ~/some_project_with_vagrant$ cat Gemfile | grep vagabond
            gem 'vagabond'
            
            ~/some_project_with_vagrant$ vagabond
            # here all your tests verify what's in your Vagrantfile

      section.slide
        pre
          | ~/some_project_with_vagrant_and_multiple_hosts_it_spins_up$ vagabond
            # here all of your tests run _per_ Vagrant host spun up!
              # think a web-server and a separate database server

    section.slide
      h2 Geuze
      h3 Blended Lambic (open/spontaneously fermented) beer.  Very funky and VERY awesome
      section.slide
        img src="images/oude-geuze.png"
        h3 Drie Fonteinen - Oude Geuze
      section.slide
        h4 or if you're <strong>super</strong> daring try Doesjel

    section.slide
      h2 A final word on motivation:
      section.slide
        h3 Remember, if your specs are clean and concise you are not only testing but building an infrastructure specification for your servers!
      section.slide
        h3 Just like good tests for your applications.

    section.slide
      h1 Questions?

    section.slide
      h1 Thanks!

    section.slide
      h2 Links
      ul
        li <a href="http://vagrantup.com">Vagrant</a>
        li <a href="http://github.com/daveworth/vagabond">Vagabond</a> (my fork)
        li <a href="http://github.com/daveworth/vagabond_example_chef">vagabond_example_chef</a> - my example chef libraries for upgrade path stuff

      /div
        /img.smallish src="http://www.dmuth.org/files/vagrant_hippie.png"
        /| Vagabond
      /div
        /img.smallish src="http://www.ymc.ch/wp-content/uploads/2013/04/vagrant_module_hero-b1df5d7d.png"
        /| Vagrant

    // If you've enabled the navigation extension
    p.deck-navigation
      a href="#"
        span.deck-prev-link title="Previous" &#8592;
      a href="#"
        span.deck-next-link title="Next" &#8594;

    // If you've enabled the status extension
    p.deck-status
      span.deck-status-current
      |  /
      span.deck-status-total

